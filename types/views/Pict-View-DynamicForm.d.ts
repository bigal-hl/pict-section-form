export = PictViewDynamicForm;
declare class PictViewDynamicForm extends libPictViewClass {
    constructor(pFable: any, pOptions: any, pServiceHash: any);
    sectionDefinition: any;
    sectionManifest: any;
    sectionSolvers: any[];
    formsTemplateSetPrefix: string;
    customDefaultTemplatePrefix: boolean;
    formID: string;
    viewMarshalDestination: boolean;
    get defaultTemplatePrefix(): any;
    dataChanged(pInputHash: any): void;
    dataChangedTabular(pGroupIndex: any, pInputIndex: any, pRowIndex: any): void;
    setDataTabularByHash(pGroupIndex: any, pInputHash: any, pRowIndex: any, pValue: any): boolean;
    getMarshalDestinationAddress(): any;
    getMarshalDestinationObject(): boolean;
    onAfterMarshalToForm(): void;
    onAfterRender(): void;
    runLayoutProviderFunctions(pFunctionName: any): void;
    runInputProviderFunctions(pFunctionName: any): void;
    checkViewSpecificTemplate(pTemplatePostfix: any): boolean;
    getViewSpecificTemplateHash(pTemplatePostfix: any): string;
    checkThemeSpecificTemplate(pTemplatePostfix: any): boolean;
    getThemeSpecificTemplateHash(pTemplatePostfix: any): string;
    rebuildCustomTemplate(): void;
    getGroup(pGroupIndex: any): any;
    getRow(pGroupIndex: any, pRowIndex: any): any;
    getRowKeyValuePair(pGroupIndex: any, pRowIndex: any): {
        Key: any;
        Value: any;
        Group: any;
    };
    getInput(pGroupIndex: any, pRowIndex: any, pInputIndex: any): any;
    getInputFromHash(pInputHash: any): any;
    getInputProviderList(pInput: any): any;
    inputDataRequest(pInputHash: any): any;
    inputEvent(pInputHash: any, pEvent: any): any;
    inputDataRequestTabular(pGroupIndex: any, pInputIndex: any, pRowIndex: any): any;
    inputEventTabular(pGroupIndex: any, pInputIndex: any, pRowIndex: any, pEvent: any): any;
    getTabularRecordInput(pGroupIndex: any, pInputIndex: any): any;
    getTabularRecordData(pGroupIndex: any, pRowIdentifier: any): any;
    getTabularRecordSet(pGroupIndex: any): any;
    createDynamicTableRow(pGroupIndex: any): any;
    setDynamicTableRowIndex(pGroupIndex: any, pRowIndex: any, pNewRowIndex: any): any;
    moveDynamicTableRowDown(pGroupIndex: any, pRowIndex: any): any;
    moveDynamicTableRowUp(pGroupIndex: any, pRowIndex: any): any;
    deleteDynamicTableRow(pGroupIndex: any, pRowIndex: any): any;
    get isPictSectionForm(): boolean;
}
import libPictViewClass = require("pict-view");
//# sourceMappingURL=Pict-View-DynamicForm.d.ts.map